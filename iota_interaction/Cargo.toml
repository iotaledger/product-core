[package]
name = "iota_interaction"
version = "0.8.1"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
keywords = ["iota", "tangle"]
license.workspace = true
readme = "./README.md"
repository.workspace = true
rust-version.workspace = true
description = "Trait definitions and a wasm32 compatible subset of code, copied from the IOTA Rust SDK, used to replace the IOTA Rust SDK for wasm32 builds."

[dependencies]
anyhow.workspace = true
async-trait = { version = "0.1.81", default-features = false }
bcs.workspace = true
cfg-if.workspace = true
fastcrypto = { git = "https://github.com/MystenLabs/fastcrypto", rev = "69d496c71fb37e3d22fe85e5bbfd4256d61422b9", package = "fastcrypto", features = ["copy_key"] }
indexmap = "2.9"
jsonpath-rust = { version = "0.5.1", optional = true }
secret-storage.workspace = true
serde.workspace = true
serde_json.workspace = true
shared-crypto = { git = "https://github.com/iotaledger/iota.git", package = "shared-crypto", tag = "v1.5.0" }
strum.workspace = true
thiserror.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
iota-sdk = { git = "https://github.com/iotaledger/iota.git", package = "iota-sdk", tag = "v1.5.0" }
move-core-types = { git = "https://github.com/iotaledger/iota.git", package = "move-core-types", tag = "v1.5.0" }
tokio = { workspace = true, optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
eyre = { version = "0.6" }
fastcrypto-zkp = { git = "https://github.com/MystenLabs/fastcrypto", rev = "69d496c71fb37e3d22fe85e5bbfd4256d61422b9", package = "fastcrypto-zkp" }
hex = { version = "0.4" }
itertools = "0.13"
jsonrpsee = { version = "0.24", default-features = false, features = ["wasm-client"] }
leb128 = { version = "0.2" }
primitive-types = { version = "0.12", features = ["impl-serde"] }
rand = "0.8.5"
ref-cast = { version = "1.0" }
serde_repr = { version = "0.1" }
serde_with = { version = "3.8", features = ["hex"] }
strum.workspace = true
thiserror.workspace = true
tracing = { version = "0.1" }
uint = { version = "0.9" }
derive_more = "0.99.18"
enum_dispatch = "0.3.13"
schemars = "0.8.21"
nonempty = "0.1.3"

[package.metadata.docs.rs]
# To build locally:
# RUSTDOCFLAGS="--cfg docsrs" cargo +nightly doc --all-features --no-deps --workspace --open
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["send-sync-transaction"]
send-sync-transaction = ["secret-storage/send-sync-storage"]
keytool = ["dep:tokio", "dep:jsonpath-rust"]
keypair-signer = []

[lints.clippy]
result_large_err = "allow"

[lints.rust]
# from local sdk types
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(msim)'] }
