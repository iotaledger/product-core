[package]
name = "product_common"
version = "0.7.0"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
keywords = ["iota", "tangle"]
license.workspace = true
readme = "./README.md"
repository.workspace = true
rust-version.workspace = true
description = "Sources shared by IOTA products."

[dependencies]
anyhow.workspace = true
async-trait.workspace = true
bcs = { workspace = true, optional = true }
cfg-if.workspace = true
fastcrypto = { workspace = true, optional = true }
iota-keys = { git = "https://github.com/iotaledger/iota.git", package = "iota-keys", tag = "v1.4.1", optional = true }
itertools = { version = "0.13.0", optional = true }
lazy_static = { version = "1.5.0", optional = true }
phf.workspace = true
reqwest = { version = "0.12", default-features = false, optional = true }
secret-storage = { git = "https://github.com/iotaledger/secret-storage.git", tag = "v0.3.0", optional = true, default-features = false }
serde.workspace = true
serde_json.workspace = true
strum.workspace = true
thiserror.workspace = true
toml = "0.8"
url = { version = "2", default-features = false, optional = true, features = ["serde"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
iota_interaction = { version = "0.7.0", path = "../iota_interaction", features = ["keytool"] }
iota_interaction_rust = { version = "0.7.0", path = "../iota_interaction_rust", optional = true }
iota-sdk.workspace = true
tokio = { version = "1.44.2", default-features = false, features = ["process"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
iota_interaction = { version = "0.7.0", path = "../iota_interaction", default-features = false }
iota_interaction_ts = { version = "0.7.0", path = "../bindings/wasm/iota_interaction_ts" }
wasm-bindgen = { version = "0.2.100", optional = true }
wasm-bindgen-futures = { version = "0.4", default-features = false, optional = true }
serde-wasm-bindgen = { version = "0.6", optional = true }
js-sys = { version = "0.3", optional = true }

[dev-dependencies]
iota_interaction = { version = "0.7.0", path = "../iota_interaction" }
iota_interaction_rust = { version = "0.7.0", path = "../iota_interaction_rust" }

[features]
default = []
send-sync = ["secret-storage/send-sync-storage"]
bindings = [
  "dep:wasm-bindgen",
  "dep:wasm-bindgen-futures",
  "dep:js-sys",
  "dep:serde-wasm-bindgen",
]
binding-utils = ["bindings", "transaction", "core-client"]
test-utils = [
  "dep:lazy_static",
  "dep:secret-storage",
  "dep:iota-keys",
  "dep:bcs",
  "dep:fastcrypto",
  "send-sync",
]
core-client = ["dep:secret-storage"]
transaction = [
  "core-client",
  "dep:iota_interaction_rust",
  "dep:itertools",
  "dep:secret-storage",
  "dep:fastcrypto",
  "dep:bcs",
]
http-client = ["dep:url"]
gas-station = ["transaction", "http-client"]
# APIs that rely on an HTTP Client won't require the user to provide an HttpClient instance but will
# instead use reqwest::Client.
default-http-client = ["http-client", "dep:reqwest"]

[package.metadata.docs.rs]
# To build locally:
# RUSTDOCFLAGS="--cfg docsrs" cargo +nightly doc --all-features --no-deps --workspace --open
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints.clippy]
result_large_err = "allow"

[lints.rust]
# from local sdk types
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(msim)'] }
